/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 Box.glb --transform 
Files: Box.glb [1.32KB] > Box-transformed.glb [1.11KB] (16%)
*/

import React, { useEffect, useRef, useState } from 'react'
import { AccumulativeShadows, Float, RandomizedLight, useGLTF } from '@react-three/drei'
import { motion } from "framer-motion-3d"
import { BoxAnimation, moveAnimation } from './helpers/AnimationVar'

const variants = {
  open: { scale: 1 },
  closed: { scale: 0, transition: { duration: 1.5 } },
}
function Box(props) {
  const { nodes, materials } = useGLTF('./models/Box.glb')
    const [scale, setScale] = useState(0.15)
    const handleResize = () => {
      if (window.innerWidth < 800) {
        setScale(0.1);
      } else {
        setScale(0.15);
      }
    };
  
    useEffect(() => {
      // Add event listener for window resize
      window.addEventListener('resize', handleResize);
  
      // Cleanup the event listener when the component unmounts
      return () => {
        window.removeEventListener('resize', handleResize);
      };
    }, []);
  
  return (
    <motion.group animate={props.isOpen ? "open"  : "closed"} variants={variants}>
    <motion.group variants={moveAnimation} animate="show" initial="hidden">
    
    <motion.group scale={scale} {...props} dispose={null}>
      <group position={[0, -0.557, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Cube.geometry} material={materials.Walls} />
        <mesh geometry={nodes.Cube_1.geometry} material={materials['Walls.001']} />
      </group>
      <mesh  castShadow receiveShadow geometry={nodes.Floor.geometry} material={materials.Floor} position={[0, -0.557, 0]} />
      <mesh geometry={nodes.Coach.geometry} material={materials['Material.002']} position={[-2.997, 0.527, 0.205]} scale={[1.072, 1.361, 1]}>
        <mesh geometry={nodes.Coach001.geometry} material={materials['Material.002']} position={[-0.122, 0, 0]} />
        <mesh geometry={nodes.Plane.geometry} material={materials['Material.002']} position={[-0.122, 0, 0]} />
        <mesh geometry={nodes.Plane002.geometry} material={materials['Material.002']} position={[-0.122, 0, 0]} />
      </mesh>
      <group position={[-0.082, 0.553, 0.293]} scale={1.486}>
        <mesh geometry={nodes.Plane007.geometry} material={materials.eeee} />
        <mesh geometry={nodes.Plane007_1.geometry} material={materials['eeee.001']} />
        <mesh geometry={nodes.Plane007_2.geometry} material={materials['Material.004']} />
        <mesh geometry={nodes.Plane007_3.geometry} material={materials['Material.005']} />
      </group>
      <mesh geometry={nodes.Circle.geometry} material={materials['Material.009']} position={[-3.33, 0.527, -3.438]}>
        <mesh  geometry={nodes.Circle001.geometry} material={materials['Material.007']} position={[0, 5.153, 0]} scale={0.673} />
        <mesh geometry={nodes.Circle002.geometry} material={materials['Material.002']} position={[0, 5.144, 1.591]} scale={0.784} />
        <mesh geometry={nodes.Circle003.geometry} material={materials['Material.006']} position={[0, 5.144, 1.591]} scale={0.784} />
        <mesh geometry={nodes.Roundcube.geometry} material={materials['Material.007']} position={[0, 5.194, 0]} />
        <mesh geometry={nodes.Vert.geometry} material={materials['Material.007']} position={[0, 5.194, 0]} scale={0.811} />
      </mesh>
      <mesh geometry={nodes.Circle004.geometry} material={materials['Material.009']} position={[-4.331, 6.001, 0.275]} rotation={[-0.032, 0, 0]}>
        <mesh geometry={nodes.Plane003.geometry} material={materials['Material.010']} position={[0.061, -1.096, 0]} />
        <mesh geometry={nodes.Plane004.geometry} material={materials['Material.011']} position={[0.042, -1.096, 0]} />

        <mesh geometry={nodes.Plane005.geometry} material={materials['Material.012']} position={[0.042, -0.356, 0]} />
      </mesh>
      <mesh    geometry={nodes.tv.geometry} material={materials['eeee.002']} position={[4.161, 0.531, 0.255]}>
        <mesh geometry={nodes.Circle005.geometry} material={materials['eeee.003']} position={[-0.127, 2.198, 0]} />
        <mesh geometry={nodes.Plane006.geometry} material={materials['eeee.004']} position={[0, 0.231, 0]} />
        <mesh geometry={nodes.Vert001.geometry} material={materials['eeee.002']} position={[-0.114, 2.226, 0.044]} scale={[1.048, 1.048, 1.186]} />
      </mesh>
      <mesh geometry={nodes.Shelf001.geometry} material={materials['eeee.002']} position={[-2.469, 1.825, 3.842]} scale={1.216}>
        <group position={[-0.239, -0.654, -0.46]}>
          <mesh geometry={nodes.Cylinder.geometry} material={materials['Material.002']} />
          <mesh geometry={nodes.Cylinder_1.geometry} material={materials['Material.014']} />
        </group>
        <group position={[-0.239, -0.654, -0.314]}>
          <mesh geometry={nodes.Cylinder001_1.geometry} material={materials['eeee.006']} />
          <mesh geometry={nodes.Cylinder001_2.geometry} material={materials['Material.014']} />
        </group>
        <group position={[-0.239, -0.657, -0.186]}>
          <mesh geometry={nodes.Cylinder002_1.geometry} material={materials['Material.015']} />
          <mesh geometry={nodes.Cylinder002_2.geometry} material={materials['Material.014']} />
        </group>
        <group position={[-0.384, -0.813, 0.133]}>
          <mesh geometry={nodes.Cylinder005.geometry} material={materials['Material.015']} />
          <mesh geometry={nodes.Cylinder005_1.geometry} material={materials['Material.014']} />
        </group>
        <group position={[-0.239, -0.721, -0.057]}>
          <mesh geometry={nodes.Cylinder004_1.geometry} material={materials['Material.016']} />
          <mesh geometry={nodes.Cylinder004_2.geometry} material={materials['Material.014']} />
        </group>
        <group position={[-0.759, -0.878, 0]}>
          <mesh geometry={nodes.Plane015.geometry} material={materials['eeee.004']} />
          <mesh geometry={nodes.Plane015_1.geometry} material={materials['eeee.005']} />
        </group>
      </mesh>
      <group position={[-2.865, 2.18, 4.233]}>
        <mesh geometry={nodes.Torus.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus_1.geometry} material={materials['Material.017']} />
        <mesh geometry={nodes.Torus_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus_4.geometry} material={materials['Material.021']} />
      </group>
      
      <group position={[-2.952, 1.557, 0.998]}>
        <mesh geometry={nodes.Torus002.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus002_1.geometry} material={materials['Material.022']} />
        <mesh geometry={nodes.Torus002_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus002_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus002_4.geometry} material={materials['Material.021']} />
      </group>
      <mesh geometry={nodes.Lamp_2.geometry} material={materials['Material.009']} position={[-3.833, 2.111, 4.218]}>
        <mesh geometry={nodes.Circle006.geometry} material={materials['Material.002']} position={[0, 0.728, 0]} />
      </mesh>
      <mesh geometry={nodes.Walls001.geometry} material={materials['Walls.002']} position={[0, -0.557, 0]} />
      
      <group position={[3.927, 2.663, 1.467]}>
        <mesh geometry={nodes.Torus003.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus003_1.geometry} material={materials['Material.022']} />
        <mesh geometry={nodes.Torus003_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus003_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus003_4.geometry} material={materials['Material.021']} />
      </group>
      <Float
          speed={1} // Animation speed, defaults to 1
          rotationIntensity={2} // XYZ rotation intensity, defaults to 1
          floatIntensity={0.2} // Up/down float intensity, works like a multiplier with floatingRange,defaults to 1
          floatingRange={[1, 1]} // Range of y-axis values the object will float within, defaults to [-0.1,0.1]
        >
      <group position={[-0.768, 7.062, -1.052]} rotation={[1.504, 0.88, -0.947]}>
        <mesh geometry={nodes.Torus001.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus001_1.geometry} material={materials['Material.017']} />
        <mesh geometry={nodes.Torus001_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus001_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus001_4.geometry} material={materials['Material.021']} />
      </group>
      </Float>
      <Float
          speed={1} // Animation speed, defaults to 1
          rotationIntensity={2} // XYZ rotation intensity, defaults to 1
          floatIntensity={0.2} // Up/down float intensity, works like a multiplier with floatingRange,defaults to 1
          floatingRange={[1, 1]} // Range of y-axis values the object will float within, defaults to [-0.1,0.1]
        >
      <group position={[-2.005, 4.471, 2.905]} rotation={[1.109, 1.068, -0.867]}>
        <mesh geometry={nodes.Torus004.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus004_1.geometry} material={materials['Material.017']} />
        <mesh geometry={nodes.Torus004_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus004_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus004_4.geometry} material={materials['Material.021']} />
      </group>
      </Float>
      <Float
          speed={1} // Animation speed, defaults to 1
          rotationIntensity={2} // XYZ rotation intensity, defaults to 1
          floatIntensity={0.2} // Up/down float intensity, works like a multiplier with floatingRange,defaults to 1
          floatingRange={[1, 1]} // Range of y-axis values the object will float within, defaults to [-0.1,0.1]
        >
      <group position={[2.084, 3.748, -4.182]} rotation={[-1.134, -0.083, -2.303]}>
        <mesh geometry={nodes.Torus006.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus006_1.geometry} material={materials['Material.022']} />
        <mesh geometry={nodes.Torus006_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus006_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus006_4.geometry} material={materials['Material.021']} />
      </group>
      </Float>
      <Float
          speed={1} // Animation speed, defaults to 1
          rotationIntensity={2} // XYZ rotation intensity, defaults to 1
          floatIntensity={0.2} // Up/down float intensity, works like a multiplier with floatingRange,defaults to 1
          floatingRange={[1, 1]} // Range of y-axis values the object will float within, defaults to [-0.1,0.1]
        >
      <group position={[-0.922, 3.594, -2.345]} rotation={[0.182, -0.221, 0.628]}>
        <mesh geometry={nodes.Torus007.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus007_1.geometry} material={materials['Material.022']} />
        <mesh geometry={nodes.Torus007_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus007_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus007_4.geometry} material={materials['Material.021']} />
      </group>
      </Float>
      <Float
          speed={1} // Animation speed, defaults to 1
          rotationIntensity={2} // XYZ rotation intensity, defaults to 1
          floatIntensity={0.2} // Up/down float intensity, works like a multiplier with floatingRange,defaults to 1
          floatingRange={[1, 1]} // Range of y-axis values the object will float within, defaults to [-0.1,0.1]
        >
      <group position={[0.225, 1.588, -2.688]} rotation={[1.504, 0.88, -0.947]}>
        <mesh geometry={nodes.Torus008.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus008_1.geometry} material={materials['Material.017']} />
        <mesh geometry={nodes.Torus008_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus008_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus008_4.geometry} material={materials['Material.021']} />
      </group>
      </Float>
      <Float
          speed={1} // Animation speed, defaults to 1
          rotationIntensity={2} // XYZ rotation intensity, defaults to 1
          floatIntensity={0.2} // Up/down float intensity, works like a multiplier with floatingRange,defaults to 1
          floatingRange={[1, 1]} // Range of y-axis values the object will float within, defaults to [-0.1,0.1]
        >
      <group position={[-3.206, 4.939, 0.096]} rotation={[-0.899, -0.161, -0.731]}>
        <mesh geometry={nodes.Torus010.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus010_1.geometry} material={materials['Material.022']} />
        <mesh geometry={nodes.Torus010_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus010_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus010_4.geometry} material={materials['Material.021']} />
      </group>
      </Float>
      <Float
          speed={1} // Animation speed, defaults to 1
          rotationIntensity={2} // XYZ rotation intensity, defaults to 1
          floatIntensity={0.2} // Up/down float intensity, works like a multiplier with floatingRange,defaults to 1
          floatingRange={[1, 1]} // Range of y-axis values the object will float within, defaults to [-0.1,0.1]
        >
      <group position={[3.11, 4.633, 3.445]}>
        <mesh geometry={nodes.Torus011.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Torus011_1.geometry} material={materials['Material.022']} />
        <mesh geometry={nodes.Torus011_2.geometry} material={materials['Material.019']} />
        <mesh geometry={nodes.Torus011_3.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Torus011_4.geometry} material={materials['Material.021']} />
      </group>
      </Float>
      
      <motion.mesh variants={BoxAnimation}  geometry={nodes.Loader.geometry} material={materials.Walls} position={[-4.796, 0, -4.828]} receiveShadow castShadow />
      
        
    </motion.group>
    <AccumulativeShadows frames={100} alphaTest={0.85} opacity={0.8} color="red" scale={20} position={[0, -0.005, 0]}>
          <RandomizedLight amount={8} radius={6} ambient={0.5} intensity={1} position={[-1.5, 2.5, -2.5]} bias={0.001} />
        </AccumulativeShadows>
    </motion.group>
    </motion.group>
  )
}

export default Box
useGLTF.preload('./models/Box.glb')
